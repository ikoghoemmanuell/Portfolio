/* jquery.poptrox.js v2.5.2-dev | (c) @ajlkn | github.com/ajlkn/jquery.poptrox | MIT licensed */
!(function (e) {
  (e.fn.poptrox_disableSelection = function () {
    return e(this)
      .css("user-select", "none")
      .css("-khtml-user-select", "none")
      .css("-moz-user-select", "none")
      .css("-o-user-select", "none")
      .css("-webkit-user-select", "none");
  }),
    (e.fn.poptrox = function (o) {
      if (0 == this.length) return e(this);
      if (this.length > 1) {
        for (var t = 0; t < this.length; t++) e(this[t]).poptrox(o);
        return e(this);
      }
      var p,
        i,
        s = e.extend(
          {
            preload: !1,
            baseZIndex: 1e3,
            fadeSpeed: 300,
            overlayColor: "#000000",
            overlayOpacity: 0.6,
            overlayClass: "poptrox-overlay",
            windowMargin: 50,
            windowHeightPad: 0,
            selector: "img", // Change selector to 'img'
            caption: null,
            parent: "body",
            popupSpeed: 300,
            popupWidth: 200,
            popupHeight: 100,
            popupIsFixed: !1,
            useBodyOverflow: !1,
            usePopupEasyClose: !0,
            usePopupForceClose: !1,
            usePopupLoader: !0,
            usePopupCloser: !0,
            usePopupCaption: !1,
            usePopupNav: !1,
            usePopupDefaultStyling: !0,
            popupBackgroundColor: "#FFFFFF",
            popupTextColor: "#000000",
            popupLoaderTextSize: "2em",
            popupCloserBackgroundColor: "#000000",
            popupCloserTextColor: "#FFFFFF",
            popupCloserTextSize: "20px",
            popupPadding: 10,
            popupCaptionHeight: 60,
            popupCaptionTextSize: null,
            popupBlankCaptionText: "(untitled)",
            popupCloserText: "&#215;",
            popupLoaderText: "&bull;&bull;&bull;&bull;",
            popupClass: "poptrox-popup",
            popupSelector: null,
            popupLoaderSelector: ".loader",
            popupCloserSelector: ".closer",
            popupCaptionSelector: ".caption",
            popupNavPreviousSelector: "",
            popupNavNextSelector: "",
            onPopupClose: null,
            onPopupOpen: null,
          },
          o
        ),
        r = e(this),
        n = e("body"),
        a = e('<div class="' + s.overlayClass + '"></div>'),
        l = e(window),
        u = [],
        d = 0,
        h = !1,
        g = new Array(),
        f = function () {
          (p = l.width()), (i = l.height() + s.windowHeightPad);
          var e = Math.abs(x.width() - x.outerWidth()),
            o = Math.abs(x.height() - x.outerHeight()),
            t = p - 2 * s.windowMargin - e,
            r = i - 2 * s.windowMargin - o;
          x.css("min-width", s.popupWidth).css("min-height", s.popupHeight),
            x.css("max-width", s.popupWidth).css("max-height", s.popupHeight),
            (v = {
              width: t,
              height: r,
              top: Math.floor(i / 2) + l.scrollTop(),
              left: Math.floor(p / 2) + l.scrollLeft(),
              "margin-left": -Math.floor(x.outerWidth() / 2),
              "margin-top": -Math.floor(x.outerHeight() / 2),
            }),
            h || (x.hide(), a.hide()),
            s.popupIsFixed
              ? ((v.position = "fixed"), (v.top -= l.scrollTop()), (v.left -= l.scrollLeft()))
              : (v.position = "absolute"),
            x.css(v);
        },
        c = function () {
          if (h)
            return (
              a.hide(),
              void (
                g.length > 1 &&
                (s.usePopupNav && (q.prev.hide(), q.next.hide()),
                s.usePopupCaption && q.caption.hide(),
                s.usePopupCloser && q.closer.hide(),
                s.usePopupLoader && q.loader.hide())
              )
            );
          if ((l.unbind("resize", f), r.unbind("click", m), s.usePopupCloser && q.closer.unbind("click", j), s.usePopupNav)) {
            var e = function () {
              var e = g[d - 1],
                o = g[d + 1];
              0 == d && !s.loop ? q.prev.hide() : q.prev.show(),
                d == g.length - 1 && !s.loop ? q.next.hide() : q.next.show(),
                q.prev.attr("href", e.attr("src")),
                q.next.attr("href", o.attr("src"));
            };
            q.prev.unbind("click", k), q.next.unbind("click", b), q.prev.bind("click", k), q.next.bind("click", b), e();
          }
          if (s.usePopupLoader && q.loader.is(":visible"))
            return void (
              g.length > 1 &&
              (s.usePopupNav && (q.prev.hide(), q.next.hide()),
              s.usePopupCaption && q.caption.hide(),
              s.usePopupCloser && q.closer.hide())
            );
          if (
            (s.usePopupDefaultStyling &&
              (s.popupBackgroundColor && x.css("background-color", s.popupBackgroundColor),
              s.popupTextColor && x.css("color", s.popupTextColor),
              s.popupLoaderTextSize && q.loader.css("font-size", s.popupLoaderTextSize),
              s.popupCloserBackgroundColor && q.closer.css("background-color", s.popupCloserBackgroundColor),
              s.popupCloserTextColor && q.closer.css("color", s.popupCloserTextColor),
              s.popupCloserTextSize && q.closer.css("font-size", s.popupCloserTextSize),
              s.popupPadding && x.css("padding", s.popupPadding)),
            s.usePopupLoader && q.loader.show(),
            s.usePopupCaption && q.caption.hide(),
            s.usePopupCloser && q.closer.hide(),
            s.usePopupNav && (q.prev.hide(), q.next.hide()),
            s.onPopupClose instanceof Function && s.onPopupClose(),
            h)
          )
            return void (
              g.length > 1 &&
              (s.usePopupNav && (q.prev.hide(), q.next.hide()),
              s.usePopupCaption && q.caption.hide(),
              s.usePopupCloser && q.closer.hide(),
              s.usePopupLoader && q.loader.hide())
            );
          (h = !0), a.hide(), x.hide(), q.loader.hide(), s.useBodyOverflow && n.css("overflow", ""), l.unbind("resize", f), x.remove(), a.remove(), (x = null), (a = null), (q = null);
        },
        m = function (o) {
          if (!h) {
            if ((o.preventDefault(), (h = !0), (x = e('<div class="' + s.popupClass + '"></div>').append(e(this).clone())), s.usePopupDefaultStyling)) {
              var t = "auto";
              s.popupCaptionTextSize && (t = s.popupCaptionTextSize),
                x.css("background", s.popupBackgroundColor),
                x.css("color", s.popupTextColor),
                x.css("padding", s.popupPadding),
                x.css("width", s.popupWidth),
                x.css("height", s.popupHeight),
                x.css("text-align", "center"),
                s.popupIsFixed || (t = "none"),
                x.css("position", s.popupIsFixed ? "fixed" : "absolute"),
                s.popupCaptionHeight > 0 &&
                  ((c = e('<div class="' + s.popupCaptionSelector.replace(".", "") + '"></div>')
                    .css("font-size", t)
                    .css("line-height", Math.floor(s.popupCaptionHeight / parseInt(t)) + "em"))
                    .appendTo(x)
                    .css("height", s.popupCaptionHeight),
                  (f = e('<div class="inner"></div>')).appendTo(c),
                  s.usePopupCaption && (f.html() || f.html(s.popupBlankCaptionText)),
                  f.fadeTo(0, 0.8))),
                s.popupLoaderSelector &&
                  (q.loader = e('<div class="' + s.popupLoaderSelector.replace(".", "") + '">' + s.popupLoaderText + "</div>")
                    .css("font-size", s.popupLoaderTextSize)
                    .appendTo(x)
                    .hide()),
                s.popupCloserSelector &&
                  (q.closer = e('<div class="' + s.popupCloserSelector.replace(".", "") + '">' + s.popupCloserText + "</div>")
                    .appendTo(x)
                    .hide()),
                s.popupNavPreviousSelector &&
                  (q.prev = e('<div class="' + s.popupNavPreviousSelector.replace(".", "") + '"></div>')
                    .appendTo(x)
                    .hide()),
                s.popupNavNextSelector &&
                  (q.next = e('<div class="' + s.popupNavNextSelector.replace(".", "") + '"></div>')
                    .appendTo(x)
                    .hide()),
                s.usePopupLoader && s.usePopupCaption && q.loader.css("margin-top", "-0.8em");
            }
            var r = e(this).attr("src"),
              n = e(this).attr("title");
            g = r ? r.split(",") : [];
            for (var a = 0; a < g.length; a++) g[a] = e.trim(g[a]);
            return (
              (d = 0),
              s.preload &&
                g.length > 1 &&
                (1 == g.length && (s.preload = !1),
                g.forEach(function (e) {
                  e && (new Image().src = e);
                })),
              s.useBodyOverflow && n.css("overflow", "hidden"),
              s.usePopupLoader && q.loader.show(),
              s.usePopupDefaultStyling &&
                (s.popupLoaderSelector && q.loader.css("top", Math.floor(x.height() / 2)),
                s.popupCaptionSelector &&
                  (q.caption = x.find(s.popupCaptionSelector)).hide().css("overflow", "hidden"),
                s.popupCloserSelector && (q.closer.show().css("cursor", "pointer"), q.closer.unbind("click").click(c)),
                s.popupNavPreviousSelector && (q.prev.show().css("cursor", "pointer"), q.prev.unbind("click").click(k)),
                s.popupNavNextSelector && (q.next.show().css("cursor", "pointer"), q.next.unbind("click").click(b))),
              s.usePopupCaption && n && (f.html() || f.html(n), f.fadeTo(s.fadeSpeed, 1)),
              (y = !0),
              (z = []),
              g.forEach(function (o) {
                var t = new Image();
                (t.onload = function () {
                  y && (z.push(t), z.length == g.length && ((y = !1), e(t).trigger("click")));
                }),
                  (t.src = o);
              }),
              e(t)
            );
          }
        },
        k = function (o) {
          o.preventDefault(),
            d > 0 && ((d -= 1), x.fadeTo(s.fadeSpeed, 0, function () {}), e(z[d]).trigger("click"));
        },
        b = function (o) {
          o.preventDefault(),
            d < g.length - 1 && ((d += 1), x.fadeTo(s.fadeSpeed, 0, function () {}), e(z[d]).trigger("click"));
        },
        j = function (e) {
          e.preventDefault(), h && c();
        },
        q = {};
      return (
        (q.prev = e(s.popupNavPreviousSelector)),
        (q.next = e(s.popupNavNextSelector)),
        (q.loader = e(s.popupLoaderSelector)),
        (q.closer = e(s.popupCloserSelector)),
        (q.caption = e(s.popupCaptionSelector)),
        s.usePopupEasyClose &&
          (a.bind("click", function (e) {
            e.preventDefault(), h && c();
          }),
          l.bind("keyup", function (e) {
             (27 != e.keyCode) || (h && c())
          })),
        n.append(a),
        l.bind("resize", f),
        r.bind("click", function () {
          var link = e(this).find("img").attr("data-link");
          if (link) {
            window.open(link, "_blank");
          }
        })
      );
    });
})(jQuery);
